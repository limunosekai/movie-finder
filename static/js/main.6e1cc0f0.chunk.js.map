{"version":3,"sources":["components/util/context.js","components/util/config.js","components/form/SearchForm.js","components/movie/Movies.js","containers/Home.js","components/movie/SingleMovie.js","App.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","AppContext","React","createContext","AppProvider","children","useState","isLoading","setIsLoading","show","msg","error","setError","movies","setMovies","query","setQuery","fetchMovies","url","a","fetch","response","json","data","Response","Search","Error","console","log","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","src","alt","Home","SingleMovie","useParams","setMovie","fetchMovie","plot","Plot","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.6e1cc0f0.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { API_KEY } from './config';\r\n\r\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${API_KEY}`;\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState({ show: false, msg: '' });\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState('batman');\r\n\r\n  const fetchMovies = async (url) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      if (data.Response === 'True') {\r\n        setMovies(data.Search);\r\n        setError({ show: false, msg: '' });\r\n      } else {\r\n        setError({ show: true, msg: data.Error });\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies(`${API_ENDPOINT}&s=${query}`);\r\n  }, [query]);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ isLoading, error, movies, query, setQuery }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\n// 함수 사용시 AppContext.Provider에 지정한 value 리턴\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","export const API_KEY = 'ff02321d';\r\n","import React from 'react';\r\nimport { useGlobalContext } from '../util/context';\r\n\r\nconst SearchForm = () => {\r\n  const { query, setQuery, error } = useGlobalContext();\r\n  return (\r\n    <form\r\n      className='search-form'\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <h2>검색어를 입력하세요</h2>\r\n      <input\r\n        type='text'\r\n        className='form-input'\r\n        value={query}\r\n        onChange={(e) => {\r\n          setQuery(e.target.value);\r\n        }}\r\n      />\r\n      {error.show && <div className='error'>{error.msg}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport { useGlobalContext } from '../util/context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst url =\r\n  'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png';\r\n\r\nconst Movies = () => {\r\n  const { movies, isLoading } = useGlobalContext();\r\n  if (isLoading) {\r\n    return <div className='loading'></div>;\r\n  }\r\n\r\n  return (\r\n    <section className='movies'>\r\n      {movies.map((movie) => {\r\n        const { imdbID: id, Poster: poster, Title: title, Year: year } = movie;\r\n        return (\r\n          <Link to={`/movie-finder/movies/${id}`} key={id} className='movie'>\r\n            <article>\r\n              <img src={poster === 'N/A' ? url : poster} alt={title} />\r\n              <div className='movie-info'>\r\n                <h4 className='title'>{title}</h4>\r\n                <p>{year}</p>\r\n              </div>\r\n            </article>\r\n          </Link>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport Form from '../components/form/SearchForm';\r\nimport Movies from '../components/movie/Movies';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <Form />\r\n      <Movies />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { API_ENDPOINT } from '../util/context';\r\n\r\nconst SingleMovie = () => {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState({ show: false, msg: '' });\r\n\r\n  const fetchMovie = async (url) => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    if (data.Response === 'False') {\r\n      setError({ show: true, msg: data.error });\r\n      setIsLoading(false);\r\n    } else {\r\n      setMovie(data);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovie(`${API_ENDPOINT}&i=${id}`);\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <div className='loading'></div>;\r\n  }\r\n\r\n  if (error.show) {\r\n    return (\r\n      <div className='page-error'>\r\n        <h1>{error.msg}</h1>\r\n        <Link to='/' className='btn'>\r\n          돌아가기\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { Poster: poster, Title: title, Plot: plot, Year: year } = movie;\r\n\r\n  return (\r\n    <section className='single-movie'>\r\n      <img src={poster} alt={title} />\r\n      <div className='single-movie-info'>\r\n        <h2>{title}</h2>\r\n        <p>{plot}</p>\r\n        <h4>{year}</h4>\r\n        <Link to='/' className='btn'>\r\n          돌아가기\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SingleMovie;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Movie from './components/movie/SingleMovie';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path='/movie-finder/' exact>\n        <Home />\n      </Route>\n      <Route path='/movie-finder/movies/:id' children={<Movie />} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from './components/util/context';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}